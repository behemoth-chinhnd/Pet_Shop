{"ast":null,"code":"// import \"@/assets/js/style.js\";\n// import HeaderTest from \"@/components/incfiles/HeaderTest.vue\";\nexport default {\n  name: \"ProductForm\",\n  components: {// HeaderTest,\n  },\n\n  data() {\n    return {\n      showFilter: false,\n      users: [],\n      currentSort: \"time\",\n      currentSortDir: 1,\n      search: {\n        uid: \"\",\n        name: \"\",\n        username: \"\",\n        email: \"\"\n      },\n      page: {\n        pageCount: 0,\n        count: 1,\n        per_page: 5\n      },\n      params: {\n        page: 1,\n        per_page: 1,\n        sort_column: \"id\",\n        direction: \"desc\",\n        search_column: \"id\",\n        search_operator: \"equal_to\",\n        search_query_1: \"\",\n        search_query_2: \"\"\n      }\n    };\n  },\n\n  created() {\n    this.getAll();\n  },\n\n  mounted() {// this.products = this.products.sort((a, b) => a.price - b.price)\n  },\n\n  methods: {\n    clickCallback(pageNum) {\n      this.page.pageCount = pageNum - 1;\n    },\n\n    prev() {\n      if (this.model.prev_page_url) {\n        this.params.page--;\n        this.getAll();\n      }\n    },\n\n    next() {\n      if (this.model.next_page_url) {\n        this.params.page--;\n        this.getAll();\n      }\n    },\n\n    getAll() {\n      this.$request.get(\"http://localhost:8000/api/users\").then(res => {\n        this.users = res.data; // sort price\n        // this.products = this.products.sort((a, b) => a.price - b.price);\n        // sort reverse\n\n        this.users = this.users.reverse();\n      });\n    },\n\n    onDelete(userId) {\n      this.$swal.fire({\n        title: \"Delete?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"question\",\n        type: \"warning\",\n        showDenyButton: false,\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n        cancelButtonText: \"No, cancel please!\",\n        timer: 5000 // closeOnConfirm: false,\n        // closeOnCancel: false\n\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.$request.delete(`http://localhost:8000/api/users/${userId}`).then(res => {\n            if (res.data.success) {\n              this.$swal.fire(\"Đã Xóa\", \"\", \"success\");\n              this.getAll();\n            }\n          });\n        }\n      });\n    },\n\n    sort: function (s) {\n      // if s == current sort, reverse\n      if (s === this.currentSort) {\n        this.currentSortDir = this.currentSortDir === \"asc\" ? \"desc\" : \"asc\";\n      }\n\n      this.currentSort = s;\n    },\n\n    changeCurrentDir() {\n      this.currentSortDir = -this.currentSortDir;\n    } // setTimeout(changeCurrentDir, 1000)\n\n\n  },\n  watch: {\n    currentSortDir(value) {\n      console.log(this.users);\n      this.users.sort((a, b) => this.currentSortDir);\n    }\n\n  },\n  computed: {\n    getFilter() {\n      // this.getAll()\n      return this.users.filter(post => {\n        if (this.search.uid === \"\") {\n          return post.name.toLowerCase().includes(this.search.name.toLowerCase()) && post.username.toLowerCase().includes(this.search.username.toLowerCase()) && post.email.toLowerCase().includes(this.search.email.toLowerCase());\n        } else {\n          return post.uid == this.search.uid && post.name.toLowerCase().includes(this.search.name.toLowerCase()) && post.username.toLowerCase().includes(this.search.username.toLowerCase()) && post.email.toLowerCase().includes(this.search.email.toLowerCase());\n        } // post.price >= 0\n        // } else if (this.search.minprice != \"\" && this.search.maxprice === \"\") {\n        // return post.username.toLowerCase().includes(this.search.name.toLowerCase());\n        // post.author.toLowerCase().includes(this.search.author.toLowerCase()) &&\n        // post.price >= this.search.minprice\n        // } else if (this.search.minprice === \"\" && this.search.maxprice != \"\") {\n        // return post.username.toLowerCase().includes(this.search.name.toLowerCase());\n        // post.author.toLowerCase().includes(this.search.author.toLowerCase()) &&\n        // post.price >= 0 &&\n        // post.price <= this.search.maxprice\n        // } else if (this.minprice != \"\" && this.maxprice != \"\") {\n        // return post.username.toLowerCase().includes(this.search.name.toLowerCase());\n        // post.author.toLowerCase().includes(this.search.author.toLowerCase()) &&\n        // post.price >= this.search.minprice &&\n        // post.price <= this.search.maxprice\n        // }\n\n      }); // },\n    },\n\n    List() {\n      if (this.getFilter.length % this.page.per_page === 0) {\n        this.page.count = Math.floor(this.getFilter.length / this.page.per_page);\n      } else if (this.getFilter.length <= this.page.per_page) {\n        this.page.count = Math.floor(this.getFilter.length / this.page.per_page + 1);\n        this.page.pageCount = 0;\n      } else if (this.page.pageCount > this.page.count - 1) {\n        this.page.count = Math.floor(this.getFilter.length / this.page.per_page) + 1;\n        this.page.pageCount = 0;\n      } else {\n        this.page.count = Math.floor(this.getFilter.length / this.page.per_page + 1);\n      }\n\n      console.log(this.page.count);\n      console.log(this.page.pageCount);\n      console.log(this.users);\n      return this.getFilter.slice(this.page.per_page * this.page.pageCount, this.page.per_page * (this.page.pageCount + 1));\n    }\n\n  } // components: { HeaderApp },\n\n};","map":{"version":3,"mappings":"AA8HA;AACA;AACA;EACAA,mBADA;EAEAC,aACA;EADA,CAFA;;EAKAC;IACA;MACAC,iBADA;MAEAC,SAFA;MAGAC,mBAHA;MAIAC,iBAJA;MAKAC;QACAC,OADA;QAEAR,QAFA;QAGAS,YAHA;QAIAC;MAJA,CALA;MAWAC;QACAC,YADA;QAEAC,QAFA;QAGAC;MAHA,CAXA;MAgBAC;QACAJ,OADA;QAEAG,WAFA;QAGAE,iBAHA;QAIAC,iBAJA;QAKAC,mBALA;QAMAC,2BANA;QAOAC,kBAPA;QAQAC;MARA;IAhBA;EA2BA,CAjCA;;EAkCAC;IACA;EACA,CApCA;;EAqCAC,WACA;EACA,CAvCA;;EAwCAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;QACA;QACA;MACA;IACA,CATA;;IAUAC;MACA;QACA;QACA;MACA;IACA,CAfA;;IAgBAC;MACA;QACA,sBADA,CAEA;QACA;QACA;;QACA;MACA,CANA;IAOA,CAxBA;;IAyBAC;MACA,WACAC,IADA,CACA;QACAC,gBADA;QAEAC,yCAFA;QAGAC,gBAHA;QAIAC,eAJA;QAKAC,qBALA;QAMAC,sBANA;QAOAC,6BAPA;QAQAC,yBARA;QASAC,oCATA;QAUAC,sCAVA;QAWAC,WAXA,CAYA;QACA;;MAbA,CADA,EAgBAC,IAhBA,CAgBAC;QACA;UACA,cACAC,MADA,CACA,2CADA,EAEAF,IAFA,CAEAG;YACA;cACA;cACA;YACA;UACA,CAPA;QAQA;MACA,CA3BA;IA4BA,CAtDA;;IAuDAC;MACA;MACA;QACA;MACA;;MACA;IACA,CA7DA;;IA8DAC;MACA;IACA,CAhEA,CAkEA;;;EAlEA,CAxCA;EA4GAC;IACA1C;MACA2C;MACA;IACA;;EAJA,CA5GA;EAkHAC;IACAC;MACA;MACA;QACA;UACA,OACAC,oEACAA,wEADA,IAEAA,kEAHA;QAKA,CANA,MAMA;UACA,OACAA,+BACAA,gEADA,IAEAA,wEAFA,IAGAA,kEAJA;QAMA,CAdA,CAeA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MACA,CA/BA,EAFA,CAmCA;IACA,CArCA;;IAuCAC;MACA;QACA;MACA,CAFA,MAEA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA,CAHA,MAGA;QACA;MACA;;MACAJ;MACAA;MAEAA;MAEA,4BACA,wCADA,EAEA,8CAFA;IAIA;;EA5DA,CAlHA,CAgLA;;AAhLA","names":["name","components","data","showFilter","users","currentSort","currentSortDir","search","uid","username","email","page","pageCount","count","per_page","params","sort_column","direction","search_column","search_operator","search_query_1","search_query_2","created","mounted","methods","clickCallback","prev","next","getAll","onDelete","fire","title","text","icon","type","showDenyButton","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","timer","then","result","delete","res","sort","changeCurrentDir","watch","console","computed","getFilter","post","List"],"sourceRoot":"src/components/admin","sources":["LoginAdmin.vue"],"sourcesContent":["<template>\r\n  <div class=\"body\">\r\n    <section id=\"main-body\">\r\n      <!-- <div class=\"pricing-header px-3 py-3 pt-md-5 pd-md-4 mx-auto text-center\">\r\n                <h2 class=\"display-4\">Users Management</h2>\r\n                <p><router-link to=\"/admin/management/users/create\">Add New</router-link></p>\r\n              </div> -->\r\n      <div class=\"container bg-white mgt--20px\">\r\n        <div class=\"panel-body flex-row-space-between-center\">\r\n          <div class=\"btn\">\r\n            <button class=\"btn btn-primary text-white\">\r\n              <router-link to=\"/admin/management/users\">Users</router-link>\r\n            </button>\r\n          </div>\r\n          <div class=\"btn\">\r\n            <button class=\"btn btn-primary text-white\">\r\n              <router-link :to=\"{ name: 'admin.management.users.create' }\"\r\n                >Add New</router-link\r\n              >\r\n            </button>\r\n\r\n            <button\r\n              @click=\"showFilter = !showFilter\"\r\n              class=\"btn btn-info btn-sm mgl-10px text-white\"\r\n            >\r\n              <i class=\"fa fa-search\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"showFilter\" class=\"filter flex-row-space-between-center\">\r\n          <div class=\"search-wrapper\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-3\">\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  v-model=\"search.uid\"\r\n                  placeholder=\"Uid\"\r\n                />\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  v-model=\"search.name\"\r\n                  placeholder=\"Name\"\r\n                />\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  v-model.number=\"search.username\"\r\n                  placeholder=\"Username\"\r\n                />\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"text\"\r\n                  v-model=\"search.email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-deck mb-3 text-center scroll-x\">\r\n          <table class=\"table table-primary table-bdrs-5px\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Username</th>\r\n                <th scope=\"col\" @click=\"changeCurrentDir()\">Email</th>\r\n                <!-- <th scope=\"col\">Password</th> -->\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              <tr v-for=\"(post, index) in List\" :key=\"index\">\r\n                <td scope=\"row\">{{ post.uid }}</td>\r\n                <td>{{ post.name }}</td>\r\n                <td>{{ post.username }}</td>\r\n                <td>{{ post.email }}</td>\r\n                <!-- <td>{{ post.password }}</td> -->\r\n                <td class=\"gap-10px\">\r\n                  <router-link\r\n                    :to=\"{\r\n                      name: 'admin.management.users.edit',\r\n                      params: { id: post.id },\r\n                    }\"\r\n                  >\r\n                    <b-button variant=\"primary\">\r\n                      <i class=\"fa fa-edit\"></i>\r\n                    </b-button>\r\n                  </router-link>\r\n                  <b-button variant=\"danger\" @click=\"onDelete(post.id)\">\r\n                    <i class=\"fa fa-trash\"></i>\r\n                  </b-button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div v-if=\"this.page.count > 1\" class=\"panel-footer\">\r\n          <paginate\r\n            v-model=\"params.page\"\r\n            :page-count=\"this.page.count\"\r\n            :page-range=\"3\"\r\n            :margin-pages=\"2\"\r\n            :click-handler=\"clickCallback\"\r\n            :prev-text=\"'<<'\"\r\n            :next-text=\"'>>'\"\r\n            :container-class=\"'pagination'\"\r\n            :page-class=\"'page-item'\"\r\n          >\r\n          </paginate>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n  <!-- <router-view/> -->\r\n</template>\r\n<script>\r\n// import \"@/assets/js/style.js\";\r\n// import HeaderTest from \"@/components/incfiles/HeaderTest.vue\";\r\nexport default {\r\n  name: \"ProductForm\",\r\n  components: {\r\n    // HeaderTest,\r\n  },\r\n  data() {\r\n    return {\r\n      showFilter: false,\r\n      users: [],\r\n      currentSort: \"time\",\r\n      currentSortDir: 1,\r\n      search: {\r\n        uid: \"\",\r\n        name: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n      },\r\n      page: {\r\n        pageCount: 0,\r\n        count: 1,\r\n        per_page: 5,\r\n      },\r\n      params: {\r\n        page: 1,\r\n        per_page: 1,\r\n        sort_column: \"id\",\r\n        direction: \"desc\",\r\n        search_column: \"id\",\r\n        search_operator: \"equal_to\",\r\n        search_query_1: \"\",\r\n        search_query_2: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getAll();\r\n  },\r\n  mounted() {\r\n    // this.products = this.products.sort((a, b) => a.price - b.price)\r\n  },\r\n  methods: {\r\n    clickCallback(pageNum) {\r\n      this.page.pageCount = pageNum - 1;\r\n    },\r\n    prev() {\r\n      if (this.model.prev_page_url) {\r\n        this.params.page--;\r\n        this.getAll();\r\n      }\r\n    },\r\n    next() {\r\n      if (this.model.next_page_url) {\r\n        this.params.page--;\r\n        this.getAll();\r\n      }\r\n    },\r\n    getAll() {\r\n      this.$request.get(\"http://localhost:8000/api/users\").then((res) => {\r\n        this.users = res.data;\r\n        // sort price\r\n        // this.products = this.products.sort((a, b) => a.price - b.price);\r\n        // sort reverse\r\n        this.users = this.users.reverse();\r\n      });\r\n    },\r\n    onDelete(userId) {\r\n      this.$swal\r\n        .fire({\r\n          title: \"Delete?\",\r\n          text: \"You won't be able to revert this!\",\r\n          icon: \"question\",\r\n          type: \"warning\",\r\n          showDenyButton: false,\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, delete it!\",\r\n          cancelButtonText: \"No, cancel please!\",\r\n          timer: 5000,\r\n          // closeOnConfirm: false,\r\n          // closeOnCancel: false\r\n        })\r\n        .then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.$request\r\n              .delete(`http://localhost:8000/api/users/${userId}`)\r\n              .then((res) => {\r\n                if (res.data.success) {\r\n                  this.$swal.fire(\"Đã Xóa\", \"\", \"success\");\r\n                  this.getAll();\r\n                }\r\n              });\r\n          }\r\n        });\r\n    },\r\n    sort: function (s) {\r\n      // if s == current sort, reverse\r\n      if (s === this.currentSort) {\r\n        this.currentSortDir = this.currentSortDir === \"asc\" ? \"desc\" : \"asc\";\r\n      }\r\n      this.currentSort = s;\r\n    },\r\n    changeCurrentDir() {\r\n      this.currentSortDir = -this.currentSortDir;\r\n    },\r\n\r\n    // setTimeout(changeCurrentDir, 1000)\r\n  },\r\n  watch: {\r\n    currentSortDir(value) {\r\n      console.log(this.users);\r\n      this.users.sort((a, b) => this.currentSortDir);\r\n    },\r\n  },\r\n  computed: {\r\n    getFilter() {\r\n      // this.getAll()\r\n      return this.users.filter((post) => {\r\n        if (this.search.uid === \"\") {\r\n          return (\r\n            post.name.toLowerCase().includes(this.search.name.toLowerCase()) &&\r\n            post.username.toLowerCase().includes(this.search.username.toLowerCase()) &&\r\n            post.email.toLowerCase().includes(this.search.email.toLowerCase())\r\n          );\r\n        } else {\r\n          return (\r\n            post.uid == this.search.uid &&\r\n            post.name.toLowerCase().includes(this.search.name.toLowerCase()) &&\r\n            post.username.toLowerCase().includes(this.search.username.toLowerCase()) &&\r\n            post.email.toLowerCase().includes(this.search.email.toLowerCase())\r\n          );\r\n        }\r\n        // post.price >= 0\r\n        // } else if (this.search.minprice != \"\" && this.search.maxprice === \"\") {\r\n        // return post.username.toLowerCase().includes(this.search.name.toLowerCase());\r\n        // post.author.toLowerCase().includes(this.search.author.toLowerCase()) &&\r\n        // post.price >= this.search.minprice\r\n        // } else if (this.search.minprice === \"\" && this.search.maxprice != \"\") {\r\n        // return post.username.toLowerCase().includes(this.search.name.toLowerCase());\r\n        // post.author.toLowerCase().includes(this.search.author.toLowerCase()) &&\r\n        // post.price >= 0 &&\r\n        // post.price <= this.search.maxprice\r\n        // } else if (this.minprice != \"\" && this.maxprice != \"\") {\r\n        // return post.username.toLowerCase().includes(this.search.name.toLowerCase());\r\n        // post.author.toLowerCase().includes(this.search.author.toLowerCase()) &&\r\n        // post.price >= this.search.minprice &&\r\n        // post.price <= this.search.maxprice\r\n        // }\r\n      });\r\n\r\n      // },\r\n    },\r\n\r\n    List() {\r\n      if (this.getFilter.length % this.page.per_page === 0) {\r\n        this.page.count = Math.floor(this.getFilter.length / this.page.per_page);\r\n      } else if (this.getFilter.length <= this.page.per_page) {\r\n        this.page.count = Math.floor(this.getFilter.length / this.page.per_page + 1);\r\n        this.page.pageCount = 0;\r\n      } else if (this.page.pageCount > this.page.count - 1) {\r\n        this.page.count = Math.floor(this.getFilter.length / this.page.per_page) + 1;\r\n        this.page.pageCount = 0;\r\n      } else {\r\n        this.page.count = Math.floor(this.getFilter.length / this.page.per_page + 1);\r\n      }\r\n      console.log(this.page.count);\r\n      console.log(this.page.pageCount);\r\n\r\n      console.log(this.users);\r\n\r\n      return this.getFilter.slice(\r\n        this.page.per_page * this.page.pageCount,\r\n        this.page.per_page * (this.page.pageCount + 1)\r\n      );\r\n    },\r\n  },\r\n  // components: { HeaderApp },\r\n};\r\n</script>\r\n<style>\r\ntable {\r\n  border-radius: 6px;\r\n}\r\ntable td,\r\ntable th {\r\n  border: 1px solid #f5f5f5;\r\n}\r\ntable th {\r\n  background: var(--primary) !important;\r\n  color: var(--white);\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}