{"ast":null,"code":"import { mapActions } from \"vuex\";\nexport default {\n  name: \"ProductDta\",\n\n  data() {\n    return {\n      errors: {\n        name: \"\",\n        price: \"\",\n        description: \"\"\n      },\n      products: [],\n      product: {\n        id: \"\",\n        pid: \"\",\n        author: \"\",\n        name: \"\",\n        price: \"\",\n        description: \"\",\n        time: \"\"\n      }\n    };\n  },\n\n  created() {\n    const productId = this.$route.params.id;\n    console.log(productId);\n\n    if (productId) {\n      this.getProduct(productId);\n    }\n  },\n\n  methods: { ...mapActions([\"\"]),\n\n    validate() {\n      let isValid = true;\n      this.errors = {\n        name: \"\",\n        price: \"\",\n        description: \"\"\n      };\n\n      if (!this.product.name) {\n        this.errors.name = \"Error name\";\n        isValid = false;\n      }\n\n      if (!this.product.price) {\n        this.errors.price = \"Error price\";\n        isValid = false;\n      } else if (!this.isNumber(this.product.price)) {\n        this.errors.price = \"price is Number\";\n        isValid = false;\n      }\n\n      if (!this.product.description) {\n        this.errors.description = \"Loi description\";\n        isValid = false;\n      }\n\n      return isValid;\n    },\n\n    isNumber(value) {\n      return /^\\d*$/.test(value);\n    },\n\n    save() {\n      if (this.validate()) {\n        if (this.product.id) {\n          this.$request.put(`http://localhost:8000/api/products/${this.product.id}`, this.product).then(res => {\n            if (res.data.success) {\n              this.$router.push({\n                name: \"product.list\"\n              });\n              return;\n            }\n\n            alert(\"Errors\");\n          });\n          return;\n        }\n\n        this.getAll();\n        let max = 0;\n        let newID = 0; // console.log(newID)\n\n        for (let i = 0; i < this.products.length; i++) {\n          console.log(this.products.length);\n\n          if (this.products[i].pid > max) {\n            max = this.products[i].pid;\n          } // return this.product.id\n\n        }\n\n        newID = max + 1;\n        this.product.pid = newID;\n        console.log(newID);\n        this.product.time = new Date().toLocaleString();\n        this.product.author = this.$store.state.user.email;\n        this.product.pid = this.$store.state.user.email;\n        this.$request.post(\"http://localhost:8000/api/products\", this.product).then(res => {\n          if (res.data.success) {\n            this.$router.push({\n              name: \"product.list\"\n            });\n          }\n        });\n      }\n    },\n\n    getProduct(productId) {\n      this.$request.get(`http://localhost:8000/api/products/${productId}`).then(res => {\n        this.product = res.data; // console.log(this.product)\n      });\n    },\n\n    reset() {\n      this.product.name = \"\", this.product.price = \"\", this.product.description = \"\";\n    },\n\n    getAll() {\n      console.log(this.builUrl());\n      this.$request.get(this.builUrl()).then(res => {\n        this.products = res.data; // sort price\n        // this.products = this.products.sort((a, b) => a.price - b.price);\n        // sort reverse\n\n        this.products = this.products.reverse();\n      });\n    },\n\n    builUrl() {\n      // let p = this.params;\n      // return `http://localhost:8000/api/products?page=${p.page}&per_page=${p.per_page}&sort_column=${p.sort_column}&direction=${p.direction}&search_column=${p.search_column}&search_operator=${p.search_operator}&search_query_1=${p.search_query_1}&search_query_2=${p.search_query_2}`;\n      return `http://localhost:8000/api/products`;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+EA;AACA;EACAA,kBADA;;EAEAC;IACA;MACAC;QACAF,QADA;QAEAG,SAFA;QAGAC;MAHA,CADA;MAMAC,YANA;MAOAC;QACAC,MADA;QAEAC,OAFA;QAGAC,UAHA;QAIAT,QAJA;QAKAG,SALA;QAMAC,eANA;QAOAM;MAPA;IAPA;EAiBA,CApBA;;EAqBAC;IACA;IACAC;;IACA;MACA;IACA;EACA,CA3BA;;EA4BAC,WACA,mBADA;;IAEAC;MACA;MACA;QACAd,QADA;QAEAG,SAFA;QAGAC;MAHA;;MAKA;QACA;QACAW;MACA;;MACA;QACA;QACAA;MACA,CAHA,MAGA;QACA;QACAA;MACA;;MACA;QACA;QACAA;MACA;;MACA;IACA,CAzBA;;IA0BAC;MACA;IACA,CA5BA;;IA6BAC;MACA;QACA;UACA,cACAC,GADA,CACA,uDADA,EACA,YADA,EAEAC,IAFA,CAEAC;YACA;cACA;gBAAApB;cAAA;cACA;YACA;;YACAqB;UACA,CARA;UASA;QACA;;QACA;QACA;QACA,cAfA,CAgBA;;QACA;UACAT;;UACA;YACAU;UACA,CAJA,CAKA;;QACA;;QACAC;QACA;QACAX;QACA;QACA;QACA;QACA,cACAY,IADA,CACA,oCADA,EACA,YADA,EAEAL,IAFA,CAEAC;UACA;YACA;cAAApB;YAAA;UACA;QACA,CANA;MAOA;IACA,CApEA;;IAqEAyB;MACA;QACA,wBADA,CAEA;MACA,CAHA;IAIA,CA1EA;;IA2EAC;MACA,wBACA,uBADA,EAEA,6BAFA;IAGA,CA/EA;;IAgFAC;MACAf;MACA;QACA,yBADA,CAEA;QACA;QACA;;QACA;MACA,CANA;IAOA,CAzFA;;IA0FAgB;MACA;MACA;MACA;IACA;;EA9FA;AA5BA","names":["name","data","errors","price","description","products","product","id","pid","author","time","created","console","methods","validate","isValid","isNumber","save","put","then","res","alert","max","newID","post","getProduct","reset","getAll","builUrl"],"sourceRoot":"src/components/product","sources":["AddProduct.vue"],"sourcesContent":["<template>\r\n  <div class=\"body\">\r\n    <section id=\"main-body\">\r\n      <div class=\"add-product\">\r\n        <div class=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\r\n          <h3 class=\"display-5\">Product Information</h3>\r\n          <router-link to=\"/admin/products\">Back</router-link>\r\n        </div>\r\n        <div class=\"container\">\r\n          <form\r\n            action=\"\"\r\n            @submit.prevent=\"save()\"\r\n            class=\"needs-validation text-left\"\r\n            novalidate\r\n          >\r\n            <div class=\"form-group row\">\r\n              <label for=\"inputName\" class=\"col-md-3 col-form-label\">Product Name</label>\r\n              <div class=\"col-md-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  v-model=\"product.name\"\r\n                  @blur=\"validate()\"\r\n                  v-bind:class=\"{ 'is-invalid': errors.name }\"\r\n                  required\r\n                />\r\n                <div class=\"feedback-invalid\" v-if=\"errors.name\">{{ errors.name }}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"inputPrice\" class=\"col-md-3 col-form-label\"\r\n                >Product Price</label\r\n              >\r\n              <div class=\"col-md-9\">\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  v-model.number=\"product.price\"\r\n                  @blur=\"validate()\"\r\n                  v-bind:class=\"{ 'is-invalid': errors.price }\"\r\n                  required\r\n                />\r\n                <div class=\"feedback-invalid\" v-if=\"errors.price\">{{ errors.price }}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"inputDescription\" class=\"col-md-3 col-form-label\"\r\n                >Product Description</label\r\n              >\r\n              <div class=\"col-md-9\">\r\n                <textarea\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  v-model=\"product.description\"\r\n                  @blur=\"validate()\"\r\n                  v-bind:class=\"{ 'is-invalid': errors.description }\"\r\n                  required\r\n                ></textarea>\r\n                <div class=\"feedback-invalid\" v-if=\"errors.description\">\r\n                  {{ errors.description }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label for=\"inputDescription\" class=\"col-md-3 col-form-label\"></label>\r\n              <div class=\"col-md-9\">\r\n                <div class=\"left group-btn\">\r\n                  <b-button type=\"submit\" variant=\"primary \">Save</b-button>\r\n                  <b-button variant=\"danger mgl-10px\" @click=\"reset()\">Reset</b-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nexport default {\r\n  name: \"ProductDta\",\r\n  data() {\r\n    return {\r\n      errors: {\r\n        name: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n      },\r\n      products: [],\r\n      product: {\r\n        id: \"\",\r\n        pid:\"\",\r\n        author:\"\",\r\n        name: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n        time: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    const productId = this.$route.params.id;\r\n    console.log(productId);\r\n    if (productId) {\r\n      this.getProduct(productId);\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\"\"]),\r\n    validate() {\r\n      let isValid = true;\r\n      this.errors = {\r\n        name: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n      };\r\n      if (!this.product.name) {\r\n        this.errors.name = \"Error name\";\r\n        isValid = false;\r\n      }\r\n      if (!this.product.price) {\r\n        this.errors.price = \"Error price\";\r\n        isValid = false;\r\n      } else if (!this.isNumber(this.product.price)) {\r\n        this.errors.price = \"price is Number\";\r\n        isValid = false;\r\n      }\r\n      if (!this.product.description) {\r\n        this.errors.description = \"Loi description\";\r\n        isValid = false;\r\n      }\r\n      return isValid;\r\n    },\r\n    isNumber(value) {\r\n      return /^\\d*$/.test(value);\r\n    },\r\n    save() {\r\n      if (this.validate()) {\r\n        if (this.product.id) {\r\n          this.$request\r\n            .put(`http://localhost:8000/api/products/${this.product.id}`, this.product)\r\n            .then((res) => {\r\n              if (res.data.success) {\r\n                this.$router.push({ name: \"product.list\" });\r\n                return;\r\n              }\r\n              alert(\"Errors\");\r\n            });\r\n          return;\r\n        }\r\n        this.getAll();\r\n        let max = 0\r\n        let newID = 0\r\n        // console.log(newID)\r\n        for (let i = 0; i < this.products.length; i++) {\r\n          console.log(this.products.length)\r\n          if (this.products[i].pid > max) {\r\n            max = this.products[i].pid\r\n          }\r\n          // return this.product.id\r\n        }\r\n        newID = max + 1\r\n        this.product.pid = newID\r\n        console.log(newID)\r\n        this.product.time = new Date().toLocaleString();\r\n        this.product.author = this.$store.state.user.email;\r\n        this.product.pid = this.$store.state.user.email;\r\n        this.$request\r\n          .post(\"http://localhost:8000/api/products\", this.product)\r\n          .then((res) => {\r\n            if (res.data.success) {\r\n              this.$router.push({ name: \"product.list\" });\r\n            }\r\n          });\r\n      }\r\n    },\r\n    getProduct(productId) {\r\n      this.$request.get(`http://localhost:8000/api/products/${productId}`).then((res) => {\r\n        this.product = res.data;\r\n        // console.log(this.product)\r\n      });\r\n    },\r\n    reset() {\r\n      (this.product.name = \"\"),\r\n        (this.product.price = \"\"),\r\n        (this.product.description = \"\");\r\n    },\r\n    getAll() {\r\n      console.log(this.builUrl());\r\n      this.$request.get(this.builUrl()).then((res) => {\r\n        this.products = res.data;\r\n        // sort price\r\n        // this.products = this.products.sort((a, b) => a.price - b.price);\r\n        // sort reverse\r\n        this.products = this.products.reverse();\r\n      });\r\n    },\r\n    builUrl() {\r\n      // let p = this.params;\r\n      // return `http://localhost:8000/api/products?page=${p.page}&per_page=${p.per_page}&sort_column=${p.sort_column}&direction=${p.direction}&search_column=${p.search_column}&search_operator=${p.search_operator}&search_query_1=${p.search_query_1}&search_query_2=${p.search_query_2}`;\r\n      return `http://localhost:8000/api/products`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.form-group {\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}