{"ast":null,"code":"import privateProps from './privateProps.js';\nimport { clickConfirm } from './staticMethods/dom.js';\nimport { DismissReason } from './utils/DismissReason.js';\nimport * as dom from './utils/dom/index.js';\nimport { callIfFunction } from './utils/utils.js';\n/**\n * @param {GlobalState} globalState\n */\n\nexport const removeKeydownHandler = globalState => {\n  if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = false;\n  }\n};\n/**\n * @param {SweetAlert2} instance\n * @param {GlobalState} globalState\n * @param {SweetAlertOptions} innerParams\n * @param {*} dismissWith\n */\n\nexport const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n  removeKeydownHandler(globalState);\n\n  if (!innerParams.toast) {\n    globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n\n    globalState.keydownTarget = innerParams.keydownListenerCapture ? window : dom.getPopup();\n    globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n    globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = true;\n  }\n};\n/**\n * @param {SweetAlertOptions} innerParams\n * @param {number} index\n * @param {number} increment\n */\n\nexport const setFocus = (innerParams, index, increment) => {\n  const focusableElements = dom.getFocusableElements(); // search for visible elements and select the next possible match\n\n  if (focusableElements.length) {\n    index = index + increment; // rollover to first item\n\n    if (index === focusableElements.length) {\n      index = 0; // go to last item\n    } else if (index === -1) {\n      index = focusableElements.length - 1;\n    }\n\n    return focusableElements[index].focus();\n  } // no visible focusable elements, focus the popup\n\n\n  dom.getPopup().focus();\n};\nconst arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\nconst arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n/**\n * @param {SweetAlert2} instance\n * @param {KeyboardEvent} e\n * @param {function} dismissWith\n */\n\nconst keydownHandler = (instance, e, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance);\n\n  if (!innerParams) {\n    return; // This instance has already been destroyed\n  } // Ignore keydown during IME composition\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n  // https://github.com/sweetalert2/sweetalert2/issues/720\n  // https://github.com/sweetalert2/sweetalert2/issues/2406\n\n\n  if (e.isComposing || e.keyCode === 229) {\n    return;\n  }\n\n  if (innerParams.stopKeydownPropagation) {\n    e.stopPropagation();\n  } // ENTER\n\n\n  if (e.key === 'Enter') {\n    handleEnter(instance, e, innerParams);\n  } // TAB\n  else if (e.key === 'Tab') {\n    handleTab(e, innerParams);\n  } // ARROWS - switch focus between buttons\n  else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(e.key)) {\n    handleArrows(e.key);\n  } // ESC\n  else if (e.key === 'Escape') {\n    handleEsc(e, innerParams, dismissWith);\n  }\n};\n/**\n * @param {SweetAlert2} instance\n * @param {KeyboardEvent} e\n * @param {SweetAlertOptions} innerParams\n */\n\n\nconst handleEnter = (instance, e, innerParams) => {\n  // https://github.com/sweetalert2/sweetalert2/issues/2386\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return;\n  }\n\n  if (e.target && instance.getInput() && e.target instanceof HTMLElement && e.target.outerHTML === instance.getInput().outerHTML) {\n    if (['textarea', 'file'].includes(innerParams.input)) {\n      return; // do not submit\n    }\n\n    clickConfirm();\n    e.preventDefault();\n  }\n};\n/**\n * @param {KeyboardEvent} e\n * @param {SweetAlertOptions} innerParams\n */\n\n\nconst handleTab = (e, innerParams) => {\n  const targetElement = e.target;\n  const focusableElements = dom.getFocusableElements();\n  let btnIndex = -1;\n\n  for (let i = 0; i < focusableElements.length; i++) {\n    if (targetElement === focusableElements[i]) {\n      btnIndex = i;\n      break;\n    }\n  } // Cycle to the next button\n\n\n  if (!e.shiftKey) {\n    setFocus(innerParams, btnIndex, 1);\n  } // Cycle to the prev button\n  else {\n    setFocus(innerParams, btnIndex, -1);\n  }\n\n  e.stopPropagation();\n  e.preventDefault();\n};\n/**\n * @param {string} key\n */\n\n\nconst handleArrows = key => {\n  const confirmButton = dom.getConfirmButton();\n  const denyButton = dom.getDenyButton();\n  const cancelButton = dom.getCancelButton();\n\n  if (document.activeElement instanceof HTMLElement && ![confirmButton, denyButton, cancelButton].includes(document.activeElement)) {\n    return;\n  }\n\n  const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n  let buttonToFocus = document.activeElement;\n\n  for (let i = 0; i < dom.getActions().children.length; i++) {\n    buttonToFocus = buttonToFocus[sibling];\n\n    if (!buttonToFocus) {\n      return;\n    }\n\n    if (buttonToFocus instanceof HTMLButtonElement && dom.isVisible(buttonToFocus)) {\n      break;\n    }\n  }\n\n  if (buttonToFocus instanceof HTMLButtonElement) {\n    buttonToFocus.focus();\n  }\n};\n/**\n * @param {KeyboardEvent} e\n * @param {SweetAlertOptions} innerParams\n * @param {function} dismissWith\n */\n\n\nconst handleEsc = (e, innerParams, dismissWith) => {\n  if (callIfFunction(innerParams.allowEscapeKey)) {\n    e.preventDefault();\n    dismissWith(DismissReason.esc);\n  }\n};","map":{"version":3,"names":["privateProps","clickConfirm","DismissReason","dom","callIfFunction","removeKeydownHandler","globalState","keydownTarget","keydownHandlerAdded","removeEventListener","keydownHandler","capture","keydownListenerCapture","addKeydownHandler","instance","innerParams","dismissWith","toast","e","window","getPopup","addEventListener","setFocus","index","increment","focusableElements","getFocusableElements","length","focus","arrowKeysNextButton","arrowKeysPreviousButton","get","isComposing","keyCode","stopKeydownPropagation","stopPropagation","key","handleEnter","handleTab","includes","handleArrows","handleEsc","allowEnterKey","target","getInput","HTMLElement","outerHTML","input","preventDefault","targetElement","btnIndex","i","shiftKey","confirmButton","getConfirmButton","denyButton","getDenyButton","cancelButton","getCancelButton","document","activeElement","sibling","buttonToFocus","getActions","children","HTMLButtonElement","isVisible","allowEscapeKey","esc"],"sources":["E:/Behemoth/Project/node_modules/sweetalert2/src/keydown-handler.js"],"sourcesContent":["import privateProps from './privateProps.js'\nimport { clickConfirm } from './staticMethods/dom.js'\nimport { DismissReason } from './utils/DismissReason.js'\nimport * as dom from './utils/dom/index.js'\nimport { callIfFunction } from './utils/utils.js'\n\n/**\n * @param {GlobalState} globalState\n */\nexport const removeKeydownHandler = (globalState) => {\n  if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture,\n    })\n    globalState.keydownHandlerAdded = false\n  }\n}\n\n/**\n * @param {SweetAlert2} instance\n * @param {GlobalState} globalState\n * @param {SweetAlertOptions} innerParams\n * @param {*} dismissWith\n */\nexport const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n  removeKeydownHandler(globalState)\n  if (!innerParams.toast) {\n    globalState.keydownHandler = (e) => keydownHandler(instance, e, dismissWith)\n    globalState.keydownTarget = innerParams.keydownListenerCapture ? window : dom.getPopup()\n    globalState.keydownListenerCapture = innerParams.keydownListenerCapture\n    globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture,\n    })\n    globalState.keydownHandlerAdded = true\n  }\n}\n\n/**\n * @param {SweetAlertOptions} innerParams\n * @param {number} index\n * @param {number} increment\n */\nexport const setFocus = (innerParams, index, increment) => {\n  const focusableElements = dom.getFocusableElements()\n  // search for visible elements and select the next possible match\n  if (focusableElements.length) {\n    index = index + increment\n\n    // rollover to first item\n    if (index === focusableElements.length) {\n      index = 0\n\n      // go to last item\n    } else if (index === -1) {\n      index = focusableElements.length - 1\n    }\n\n    return focusableElements[index].focus()\n  }\n  // no visible focusable elements, focus the popup\n  dom.getPopup().focus()\n}\n\nconst arrowKeysNextButton = ['ArrowRight', 'ArrowDown']\n\nconst arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp']\n\n/**\n * @param {SweetAlert2} instance\n * @param {KeyboardEvent} e\n * @param {function} dismissWith\n */\nconst keydownHandler = (instance, e, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance)\n\n  if (!innerParams) {\n    return // This instance has already been destroyed\n  }\n\n  // Ignore keydown during IME composition\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n  // https://github.com/sweetalert2/sweetalert2/issues/720\n  // https://github.com/sweetalert2/sweetalert2/issues/2406\n  if (e.isComposing || e.keyCode === 229) {\n    return\n  }\n\n  if (innerParams.stopKeydownPropagation) {\n    e.stopPropagation()\n  }\n\n  // ENTER\n  if (e.key === 'Enter') {\n    handleEnter(instance, e, innerParams)\n  }\n\n  // TAB\n  else if (e.key === 'Tab') {\n    handleTab(e, innerParams)\n  }\n\n  // ARROWS - switch focus between buttons\n  else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(e.key)) {\n    handleArrows(e.key)\n  }\n\n  // ESC\n  else if (e.key === 'Escape') {\n    handleEsc(e, innerParams, dismissWith)\n  }\n}\n\n/**\n * @param {SweetAlert2} instance\n * @param {KeyboardEvent} e\n * @param {SweetAlertOptions} innerParams\n */\nconst handleEnter = (instance, e, innerParams) => {\n  // https://github.com/sweetalert2/sweetalert2/issues/2386\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return\n  }\n\n  if (\n    e.target &&\n    instance.getInput() &&\n    e.target instanceof HTMLElement &&\n    e.target.outerHTML === instance.getInput().outerHTML\n  ) {\n    if (['textarea', 'file'].includes(innerParams.input)) {\n      return // do not submit\n    }\n\n    clickConfirm()\n    e.preventDefault()\n  }\n}\n\n/**\n * @param {KeyboardEvent} e\n * @param {SweetAlertOptions} innerParams\n */\nconst handleTab = (e, innerParams) => {\n  const targetElement = e.target\n\n  const focusableElements = dom.getFocusableElements()\n  let btnIndex = -1\n  for (let i = 0; i < focusableElements.length; i++) {\n    if (targetElement === focusableElements[i]) {\n      btnIndex = i\n      break\n    }\n  }\n\n  // Cycle to the next button\n  if (!e.shiftKey) {\n    setFocus(innerParams, btnIndex, 1)\n  }\n\n  // Cycle to the prev button\n  else {\n    setFocus(innerParams, btnIndex, -1)\n  }\n\n  e.stopPropagation()\n  e.preventDefault()\n}\n\n/**\n * @param {string} key\n */\nconst handleArrows = (key) => {\n  const confirmButton = dom.getConfirmButton()\n  const denyButton = dom.getDenyButton()\n  const cancelButton = dom.getCancelButton()\n  if (\n    document.activeElement instanceof HTMLElement &&\n    ![confirmButton, denyButton, cancelButton].includes(document.activeElement)\n  ) {\n    return\n  }\n  const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling'\n  let buttonToFocus = document.activeElement\n  for (let i = 0; i < dom.getActions().children.length; i++) {\n    buttonToFocus = buttonToFocus[sibling]\n    if (!buttonToFocus) {\n      return\n    }\n    if (buttonToFocus instanceof HTMLButtonElement && dom.isVisible(buttonToFocus)) {\n      break\n    }\n  }\n  if (buttonToFocus instanceof HTMLButtonElement) {\n    buttonToFocus.focus()\n  }\n}\n\n/**\n * @param {KeyboardEvent} e\n * @param {SweetAlertOptions} innerParams\n * @param {function} dismissWith\n */\nconst handleEsc = (e, innerParams, dismissWith) => {\n  if (callIfFunction(innerParams.allowEscapeKey)) {\n    e.preventDefault()\n    dismissWith(DismissReason.esc)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}