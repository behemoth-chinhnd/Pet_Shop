{"ast":null,"code":"import privateProps from '../../../privateProps.js';\nimport { iconTypes, swalClasses } from '../../classes.js';\nimport * as dom from '../../dom/index.js';\nimport { error } from '../../utils.js';\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\n\nexport const renderIcon = (instance, params) => {\n  const innerParams = privateProps.innerParams.get(instance);\n  const icon = dom.getIcon(); // if the given icon already rendered, apply the styling without re-rendering the icon\n\n  if (innerParams && params.icon === innerParams.icon) {\n    // Custom or default content\n    setContent(icon, params);\n    applyStyles(icon, params);\n    return;\n  }\n\n  if (!params.icon && !params.iconHtml) {\n    dom.hide(icon);\n    return;\n  }\n\n  if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n    error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`);\n    dom.hide(icon);\n    return;\n  }\n\n  dom.show(icon); // Custom or default content\n\n  setContent(icon, params);\n  applyStyles(icon, params); // Animate icon\n\n  dom.addClass(icon, params.showClass.icon);\n};\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\n\nconst applyStyles = (icon, params) => {\n  for (const iconType in iconTypes) {\n    if (params.icon !== iconType) {\n      dom.removeClass(icon, iconTypes[iconType]);\n    }\n  }\n\n  dom.addClass(icon, iconTypes[params.icon]); // Icon color\n\n  setColor(icon, params); // Success icon background color\n\n  adjustSuccessIconBackgroundColor(); // Custom class\n\n  dom.applyCustomClass(icon, params, 'icon');\n}; // Adjust success icon background color to match the popup background color\n\n\nconst adjustSuccessIconBackgroundColor = () => {\n  const popup = dom.getPopup();\n  const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n  /** @type {NodeListOf<HTMLElement>} */\n\n  const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n\n  for (let i = 0; i < successIconParts.length; i++) {\n    successIconParts[i].style.backgroundColor = popupBackgroundColor;\n  }\n};\n\nconst successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`;\nconst errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`;\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\n\nconst setContent = (icon, params) => {\n  let oldContent = icon.innerHTML;\n  let newContent;\n\n  if (params.iconHtml) {\n    newContent = iconContent(params.iconHtml);\n  } else if (params.icon === 'success') {\n    newContent = successIconHtml;\n    oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n  } else if (params.icon === 'error') {\n    newContent = errorIconHtml;\n  } else {\n    const defaultIconHtml = {\n      question: '?',\n      warning: '!',\n      info: 'i'\n    };\n    newContent = iconContent(defaultIconHtml[params.icon]);\n  }\n\n  if (oldContent.trim() !== newContent.trim()) {\n    dom.setInnerHtml(icon, newContent);\n  }\n};\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\n\n\nconst setColor = (icon, params) => {\n  if (!params.iconColor) {\n    return;\n  }\n\n  icon.style.color = params.iconColor;\n  icon.style.borderColor = params.iconColor;\n\n  for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\n    dom.setStyle(icon, sel, 'backgroundColor', params.iconColor);\n  }\n\n  dom.setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n};\n/**\n * @param {string} content\n * @returns {string}\n */\n\n\nconst iconContent = content => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`;","map":{"version":3,"names":["privateProps","iconTypes","swalClasses","dom","error","renderIcon","instance","params","innerParams","get","icon","getIcon","setContent","applyStyles","iconHtml","hide","Object","keys","indexOf","show","addClass","showClass","iconType","removeClass","setColor","adjustSuccessIconBackgroundColor","applyCustomClass","popup","getPopup","popupBackgroundColor","window","getComputedStyle","getPropertyValue","successIconParts","querySelectorAll","i","length","style","backgroundColor","successIconHtml","errorIconHtml","oldContent","innerHTML","newContent","iconContent","replace","defaultIconHtml","question","warning","info","trim","setInnerHtml","iconColor","color","borderColor","sel","setStyle","content"],"sources":["E:/Behemoth/Project/node_modules/sweetalert2/src/utils/dom/renderers/renderIcon.js"],"sourcesContent":["import privateProps from '../../../privateProps.js'\nimport { iconTypes, swalClasses } from '../../classes.js'\nimport * as dom from '../../dom/index.js'\nimport { error } from '../../utils.js'\n\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\nexport const renderIcon = (instance, params) => {\n  const innerParams = privateProps.innerParams.get(instance)\n  const icon = dom.getIcon()\n\n  // if the given icon already rendered, apply the styling without re-rendering the icon\n  if (innerParams && params.icon === innerParams.icon) {\n    // Custom or default content\n    setContent(icon, params)\n\n    applyStyles(icon, params)\n    return\n  }\n\n  if (!params.icon && !params.iconHtml) {\n    dom.hide(icon)\n    return\n  }\n\n  if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n    error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`)\n    dom.hide(icon)\n    return\n  }\n\n  dom.show(icon)\n\n  // Custom or default content\n  setContent(icon, params)\n\n  applyStyles(icon, params)\n\n  // Animate icon\n  dom.addClass(icon, params.showClass.icon)\n}\n\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\nconst applyStyles = (icon, params) => {\n  for (const iconType in iconTypes) {\n    if (params.icon !== iconType) {\n      dom.removeClass(icon, iconTypes[iconType])\n    }\n  }\n  dom.addClass(icon, iconTypes[params.icon])\n\n  // Icon color\n  setColor(icon, params)\n\n  // Success icon background color\n  adjustSuccessIconBackgroundColor()\n\n  // Custom class\n  dom.applyCustomClass(icon, params, 'icon')\n}\n\n// Adjust success icon background color to match the popup background color\nconst adjustSuccessIconBackgroundColor = () => {\n  const popup = dom.getPopup()\n  const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color')\n  /** @type {NodeListOf<HTMLElement>} */\n  const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix')\n  for (let i = 0; i < successIconParts.length; i++) {\n    successIconParts[i].style.backgroundColor = popupBackgroundColor\n  }\n}\n\nconst successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`\n\nconst errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`\n\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\nconst setContent = (icon, params) => {\n  let oldContent = icon.innerHTML\n  let newContent\n  if (params.iconHtml) {\n    newContent = iconContent(params.iconHtml)\n  } else if (params.icon === 'success') {\n    newContent = successIconHtml\n    oldContent = oldContent.replace(/ style=\".*?\"/g, '') // undo adjustSuccessIconBackgroundColor()\n  } else if (params.icon === 'error') {\n    newContent = errorIconHtml\n  } else {\n    const defaultIconHtml = {\n      question: '?',\n      warning: '!',\n      info: 'i',\n    }\n    newContent = iconContent(defaultIconHtml[params.icon])\n  }\n\n  if (oldContent.trim() !== newContent.trim()) {\n    dom.setInnerHtml(icon, newContent)\n  }\n}\n\n/**\n * @param {HTMLElement} icon\n * @param {SweetAlertOptions} params\n */\nconst setColor = (icon, params) => {\n  if (!params.iconColor) {\n    return\n  }\n  icon.style.color = params.iconColor\n  icon.style.borderColor = params.iconColor\n  for (const sel of [\n    '.swal2-success-line-tip',\n    '.swal2-success-line-long',\n    '.swal2-x-mark-line-left',\n    '.swal2-x-mark-line-right',\n  ]) {\n    dom.setStyle(icon, sel, 'backgroundColor', params.iconColor)\n  }\n  dom.setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor)\n}\n\n/**\n * @param {string} content\n * @returns {string}\n */\nconst iconContent = (content) => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}