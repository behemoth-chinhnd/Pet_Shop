{"ast":null,"code":"// import HelloWorld from '@/components/HelloWorld.vue'\nexport default {\n  name: 'ProductForm',\n\n  data() {\n    return {\n      products: [],\n      currentSort: 'price',\n      currentSortDir: 'desc'\n    };\n  },\n\n  created() {\n    this.getAll();\n  },\n\n  computed: {\n    // list component computed props\n    list() {\n      return this.products.filter(p => {\n        // first using this.search\n        return product.price.toLowerCase().indexOf(this.search.toLowerCase()) > -1;\n      }).sort((a, b) => {\n        // sort using this.orderBy\n        const first = a[this.orderBy].toLowerCase();\n        const next = b[this.orderBy].toLowerCase();\n\n        if (first > next) {\n          return 1;\n        }\n\n        if (first < next) {\n          return -1;\n        }\n\n        return 0;\n      });\n    }\n\n  },\n\n  // computed: {\n  //   sortedProducts () {\n  //     console.log(this.products)\n  //     return this.products.sort((a, b) => {\n  //       let modifier = 1\n  //       if (this.currentSortDir === 'desc') modifier = -1\n  //       if (a[this.currentSort] < b[this.currentSort]) return -1 * modifier\n  //       if (a[this.currentSort] > b[this.currentSort]) return 1 * modifier\n  //       return 0\n  //     })\n  //   }\n  // },\n  mounted() {\n    // console.log('ok')\n    this.currentSortDir = -this.currentSortDir;\n  },\n\n  methods: {\n    getAll() {\n      this.$request.get('http://localhost:8000/api/products').then(res => {\n        this.products = res.data;\n      });\n    } // sort (s) {\n    //   // if s == current sort, reverse\n    //   if (s === this.currentSort) {\n    //     this.currentSortDir = this.currentSortDir === 'asc' ? 'desc' : 'asc'\n    //   }\n    //   this.currentSort = s\n    // },\n    // changeCurrentDir () {\n    //   this.currentSortDir = -(this.currentSortDir)\n    // }\n\n\n  },\n  watch: {\n    currentSortDir(value) {\n      console.log(this.products);\n      this.products.sort((a, b) => this.currentSortDir);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgCA;AAEA;EACAA,mBADA;;EAEAC;IACA;MACAC,YADA;MAEAC,oBAFA;MAGAC;IAHA;EAKA,CARA;;EASAC;IACA;EACA,CAXA;;EAYAC;IAAA;IACAC;MACA;QAAA;QACA,mCACAC,OADA,CACA,yBADA,IACA,EADA;MAEA,CAHA,EAIAC,IAJA,CAIA;QAAA;QACA;QACA;;QACA;UACA;QACA;;QACA;UACA;QACA;;QACA;MACA,CAdA;IAeA;;EAjBA,CAZA;;EA+BA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC;IACA;IACA;EACA,CA/CA;;EAgDAC;IACAC;MACA;QACA;MACA,CAFA;IAGA,CALA,CAMA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EAfA,CAhDA;EAiEAC;IACAT;MACAU;MACA;IACA;;EAJA;AAjEA","names":["name","data","products","currentSort","currentSortDir","created","computed","list","indexOf","sort","mounted","methods","getAll","watch","console"],"sourceRoot":"src/components/product","sources":["ListProduct.vue"],"sourcesContent":["<template>\r\n  <div id=\"product\">\r\n    <div class=\"pricing-header px-3 py-3 pt-md-5 pd-md-4 mx-auto text-center\">\r\n      <h2 class=\"display-4\">Product Management</h2>\r\n      <p><router-link to=\"/add-product\">Add New</router-link></p>\r\n    </div>\r\n      <div class=\"container\">\r\n      <div class=\"card-deck mb-3 text-center\">\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\" >Product name</th>\r\n              <th scope=\"col\" @click=\"changeCurrentDir()\">Price</th>\r\n              <th scope=\"col\">Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody >\r\n            <tr v-for=\"(product, index) in products\" :key=\"index\">\r\n              <td scope=\"row\">{{index}}</td>\r\n              <td>{{product.name}}</td>\r\n              <td>{{product.price }}</td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- <router-view/> -->\r\n</template>\r\n<script>\r\n// import HelloWorld from '@/components/HelloWorld.vue'\r\n\r\nexport default {\r\n  name: 'ProductForm',\r\n  data () {\r\n    return {\r\n      products: [],\r\n      currentSort: 'price',\r\n      currentSortDir: 'desc'\r\n    }\r\n  },\r\n  created () {\r\n    this.getAll()\r\n  },\r\n  computed: { // list component computed props\r\n    list () {\r\n      return this.products.filter(p => { // first using this.search\r\n        return product.price.toLowerCase()\r\n          .indexOf(this.search.toLowerCase()) > -1\r\n      })\r\n        .sort((a, b) => { // sort using this.orderBy\r\n          const first = a[this.orderBy].toLowerCase()\r\n          const next = b[this.orderBy].toLowerCase()\r\n          if (first > next) {\r\n            return 1\r\n          }\r\n          if (first < next) {\r\n            return -1\r\n          }\r\n          return 0\r\n        })\r\n    }\r\n  },\r\n  // computed: {\r\n  //   sortedProducts () {\r\n  //     console.log(this.products)\r\n  //     return this.products.sort((a, b) => {\r\n  //       let modifier = 1\r\n  //       if (this.currentSortDir === 'desc') modifier = -1\r\n  //       if (a[this.currentSort] < b[this.currentSort]) return -1 * modifier\r\n  //       if (a[this.currentSort] > b[this.currentSort]) return 1 * modifier\r\n  //       return 0\r\n  //     })\r\n  //   }\r\n  // },\r\n\r\n  mounted () {\r\n    // console.log('ok')\r\n    this.currentSortDir = -(this.currentSortDir)\r\n  },\r\n  methods: {\r\n    getAll () {\r\n      this.$request.get('http://localhost:8000/api/products').then(res => {\r\n        this.products = res.data\r\n      })\r\n    }\r\n    // sort (s) {\r\n    //   // if s == current sort, reverse\r\n    //   if (s === this.currentSort) {\r\n    //     this.currentSortDir = this.currentSortDir === 'asc' ? 'desc' : 'asc'\r\n    //   }\r\n    //   this.currentSort = s\r\n    // },\r\n    // changeCurrentDir () {\r\n    //   this.currentSortDir = -(this.currentSortDir)\r\n    // }\r\n  },\r\n  watch: {\r\n    currentSortDir (value) {\r\n      console.log(this.products)\r\n      this.products.sort((a, b) => this.currentSortDir)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}