{"ast":null,"code":"import privateProps from './privateProps.js';\nimport { DismissReason } from './utils/DismissReason.js';\nimport { callIfFunction } from './utils/utils.js';\nexport const handlePopupClick = (instance, domCache, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance);\n\n  if (innerParams.toast) {\n    handleToastClick(instance, domCache, dismissWith);\n  } else {\n    // Ignore click events that had mousedown on the popup but mouseup on the container\n    // This can happen when the user drags a slider\n    handleModalMousedown(domCache); // Ignore click events that had mousedown on the container but mouseup on the popup\n\n    handleContainerMousedown(domCache);\n    handleModalClick(instance, domCache, dismissWith);\n  }\n};\n\nconst handleToastClick = (instance, domCache, dismissWith) => {\n  // Closing toast by internal click\n  domCache.popup.onclick = () => {\n    const innerParams = privateProps.innerParams.get(instance);\n\n    if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n      return;\n    }\n\n    dismissWith(DismissReason.close);\n  };\n};\n/**\n * @param {*} innerParams\n * @returns {boolean}\n */\n\n\nconst isAnyButtonShown = innerParams => {\n  return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\n};\n\nlet ignoreOutsideClick = false;\n\nconst handleModalMousedown = domCache => {\n  domCache.popup.onmousedown = () => {\n    domCache.container.onmouseup = function (e) {\n      domCache.container.onmouseup = undefined; // We only check if the mouseup target is the container because usually it doesn't\n      // have any other direct children aside of the popup\n\n      if (e.target === domCache.container) {\n        ignoreOutsideClick = true;\n      }\n    };\n  };\n};\n\nconst handleContainerMousedown = domCache => {\n  domCache.container.onmousedown = () => {\n    domCache.popup.onmouseup = function (e) {\n      domCache.popup.onmouseup = undefined; // We also need to check if the mouseup target is a child of the popup\n\n      if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n        ignoreOutsideClick = true;\n      }\n    };\n  };\n};\n\nconst handleModalClick = (instance, domCache, dismissWith) => {\n  domCache.container.onclick = e => {\n    const innerParams = privateProps.innerParams.get(instance);\n\n    if (ignoreOutsideClick) {\n      ignoreOutsideClick = false;\n      return;\n    }\n\n    if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n      dismissWith(DismissReason.backdrop);\n    }\n  };\n};","map":{"version":3,"names":["privateProps","DismissReason","callIfFunction","handlePopupClick","instance","domCache","dismissWith","innerParams","get","toast","handleToastClick","handleModalMousedown","handleContainerMousedown","handleModalClick","popup","onclick","isAnyButtonShown","timer","input","close","showConfirmButton","showDenyButton","showCancelButton","showCloseButton","ignoreOutsideClick","onmousedown","container","onmouseup","e","undefined","target","contains","allowOutsideClick","backdrop"],"sources":["E:/Behemoth/Project/node_modules/sweetalert2/src/popup-click-handler.js"],"sourcesContent":["import privateProps from './privateProps.js'\nimport { DismissReason } from './utils/DismissReason.js'\nimport { callIfFunction } from './utils/utils.js'\n\nexport const handlePopupClick = (instance, domCache, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance)\n  if (innerParams.toast) {\n    handleToastClick(instance, domCache, dismissWith)\n  } else {\n    // Ignore click events that had mousedown on the popup but mouseup on the container\n    // This can happen when the user drags a slider\n    handleModalMousedown(domCache)\n\n    // Ignore click events that had mousedown on the container but mouseup on the popup\n    handleContainerMousedown(domCache)\n\n    handleModalClick(instance, domCache, dismissWith)\n  }\n}\n\nconst handleToastClick = (instance, domCache, dismissWith) => {\n  // Closing toast by internal click\n  domCache.popup.onclick = () => {\n    const innerParams = privateProps.innerParams.get(instance)\n    if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n      return\n    }\n    dismissWith(DismissReason.close)\n  }\n}\n\n/**\n * @param {*} innerParams\n * @returns {boolean}\n */\nconst isAnyButtonShown = (innerParams) => {\n  return (\n    innerParams.showConfirmButton ||\n    innerParams.showDenyButton ||\n    innerParams.showCancelButton ||\n    innerParams.showCloseButton\n  )\n}\n\nlet ignoreOutsideClick = false\n\nconst handleModalMousedown = (domCache) => {\n  domCache.popup.onmousedown = () => {\n    domCache.container.onmouseup = function (e) {\n      domCache.container.onmouseup = undefined\n      // We only check if the mouseup target is the container because usually it doesn't\n      // have any other direct children aside of the popup\n      if (e.target === domCache.container) {\n        ignoreOutsideClick = true\n      }\n    }\n  }\n}\n\nconst handleContainerMousedown = (domCache) => {\n  domCache.container.onmousedown = () => {\n    domCache.popup.onmouseup = function (e) {\n      domCache.popup.onmouseup = undefined\n      // We also need to check if the mouseup target is a child of the popup\n      if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n        ignoreOutsideClick = true\n      }\n    }\n  }\n}\n\nconst handleModalClick = (instance, domCache, dismissWith) => {\n  domCache.container.onclick = (e) => {\n    const innerParams = privateProps.innerParams.get(instance)\n    if (ignoreOutsideClick) {\n      ignoreOutsideClick = false\n      return\n    }\n    if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n      dismissWith(DismissReason.backdrop)\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}