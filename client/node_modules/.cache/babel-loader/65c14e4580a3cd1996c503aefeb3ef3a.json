{"ast":null,"code":"import { swalClasses } from '../../classes.js';\nimport * as dom from '../../dom/index.js';\nimport { warn } from '../../utils.js';\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\n\nexport const renderProgressSteps = (instance, params) => {\n  const progressStepsContainer = dom.getProgressSteps();\n\n  if (!params.progressSteps || params.progressSteps.length === 0) {\n    return dom.hide(progressStepsContainer);\n  }\n\n  dom.show(progressStepsContainer);\n  progressStepsContainer.textContent = '';\n\n  if (params.currentProgressStep >= params.progressSteps.length) {\n    warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n  }\n\n  params.progressSteps.forEach((step, index) => {\n    const stepEl = createStepElement(step);\n    progressStepsContainer.appendChild(stepEl);\n\n    if (index === params.currentProgressStep) {\n      dom.addClass(stepEl, swalClasses['active-progress-step']);\n    }\n\n    if (index !== params.progressSteps.length - 1) {\n      const lineEl = createLineElement(params);\n      progressStepsContainer.appendChild(lineEl);\n    }\n  });\n};\n/**\n * @param {string} step\n * @returns {HTMLLIElement}\n */\n\nconst createStepElement = step => {\n  const stepEl = document.createElement('li');\n  dom.addClass(stepEl, swalClasses['progress-step']);\n  dom.setInnerHtml(stepEl, step);\n  return stepEl;\n};\n/**\n * @param {SweetAlertOptions} params\n * @returns {HTMLLIElement}\n */\n\n\nconst createLineElement = params => {\n  const lineEl = document.createElement('li');\n  dom.addClass(lineEl, swalClasses['progress-step-line']);\n\n  if (params.progressStepsDistance) {\n    dom.applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n  }\n\n  return lineEl;\n};","map":{"version":3,"names":["swalClasses","dom","warn","renderProgressSteps","instance","params","progressStepsContainer","getProgressSteps","progressSteps","length","hide","show","textContent","currentProgressStep","forEach","step","index","stepEl","createStepElement","appendChild","addClass","lineEl","createLineElement","document","createElement","setInnerHtml","progressStepsDistance","applyNumericalStyle"],"sources":["E:/Behemoth/Project/node_modules/sweetalert2/src/utils/dom/renderers/renderProgressSteps.js"],"sourcesContent":["import { swalClasses } from '../../classes.js'\nimport * as dom from '../../dom/index.js'\nimport { warn } from '../../utils.js'\n\n/**\n * @param {SweetAlert2} instance\n * @param {SweetAlertOptions} params\n */\nexport const renderProgressSteps = (instance, params) => {\n  const progressStepsContainer = dom.getProgressSteps()\n  if (!params.progressSteps || params.progressSteps.length === 0) {\n    return dom.hide(progressStepsContainer)\n  }\n\n  dom.show(progressStepsContainer)\n  progressStepsContainer.textContent = ''\n  if (params.currentProgressStep >= params.progressSteps.length) {\n    warn(\n      'Invalid currentProgressStep parameter, it should be less than progressSteps.length ' +\n        '(currentProgressStep like JS arrays starts from 0)'\n    )\n  }\n\n  params.progressSteps.forEach((step, index) => {\n    const stepEl = createStepElement(step)\n    progressStepsContainer.appendChild(stepEl)\n    if (index === params.currentProgressStep) {\n      dom.addClass(stepEl, swalClasses['active-progress-step'])\n    }\n\n    if (index !== params.progressSteps.length - 1) {\n      const lineEl = createLineElement(params)\n      progressStepsContainer.appendChild(lineEl)\n    }\n  })\n}\n\n/**\n * @param {string} step\n * @returns {HTMLLIElement}\n */\nconst createStepElement = (step) => {\n  const stepEl = document.createElement('li')\n  dom.addClass(stepEl, swalClasses['progress-step'])\n  dom.setInnerHtml(stepEl, step)\n  return stepEl\n}\n\n/**\n * @param {SweetAlertOptions} params\n * @returns {HTMLLIElement}\n */\nconst createLineElement = (params) => {\n  const lineEl = document.createElement('li')\n  dom.addClass(lineEl, swalClasses['progress-step-line'])\n  if (params.progressStepsDistance) {\n    dom.applyNumericalStyle(lineEl, 'width', params.progressStepsDistance)\n  }\n  return lineEl\n}\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,gBAArB;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;EACvD,MAAMC,sBAAsB,GAAGL,GAAG,CAACM,gBAAJ,EAA/B;;EACA,IAAI,CAACF,MAAM,CAACG,aAAR,IAAyBH,MAAM,CAACG,aAAP,CAAqBC,MAArB,KAAgC,CAA7D,EAAgE;IAC9D,OAAOR,GAAG,CAACS,IAAJ,CAASJ,sBAAT,CAAP;EACD;;EAEDL,GAAG,CAACU,IAAJ,CAASL,sBAAT;EACAA,sBAAsB,CAACM,WAAvB,GAAqC,EAArC;;EACA,IAAIP,MAAM,CAACQ,mBAAP,IAA8BR,MAAM,CAACG,aAAP,CAAqBC,MAAvD,EAA+D;IAC7DP,IAAI,CACF,wFACE,oDAFA,CAAJ;EAID;;EAEDG,MAAM,CAACG,aAAP,CAAqBM,OAArB,CAA6B,CAACC,IAAD,EAAOC,KAAP,KAAiB;IAC5C,MAAMC,MAAM,GAAGC,iBAAiB,CAACH,IAAD,CAAhC;IACAT,sBAAsB,CAACa,WAAvB,CAAmCF,MAAnC;;IACA,IAAID,KAAK,KAAKX,MAAM,CAACQ,mBAArB,EAA0C;MACxCZ,GAAG,CAACmB,QAAJ,CAAaH,MAAb,EAAqBjB,WAAW,CAAC,sBAAD,CAAhC;IACD;;IAED,IAAIgB,KAAK,KAAKX,MAAM,CAACG,aAAP,CAAqBC,MAArB,GAA8B,CAA5C,EAA+C;MAC7C,MAAMY,MAAM,GAAGC,iBAAiB,CAACjB,MAAD,CAAhC;MACAC,sBAAsB,CAACa,WAAvB,CAAmCE,MAAnC;IACD;EACF,CAXD;AAYD,CA3BM;AA6BP;AACA;AACA;AACA;;AACA,MAAMH,iBAAiB,GAAIH,IAAD,IAAU;EAClC,MAAME,MAAM,GAAGM,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAf;EACAvB,GAAG,CAACmB,QAAJ,CAAaH,MAAb,EAAqBjB,WAAW,CAAC,eAAD,CAAhC;EACAC,GAAG,CAACwB,YAAJ,CAAiBR,MAAjB,EAAyBF,IAAzB;EACA,OAAOE,MAAP;AACD,CALD;AAOA;AACA;AACA;AACA;;;AACA,MAAMK,iBAAiB,GAAIjB,MAAD,IAAY;EACpC,MAAMgB,MAAM,GAAGE,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAf;EACAvB,GAAG,CAACmB,QAAJ,CAAaC,MAAb,EAAqBrB,WAAW,CAAC,oBAAD,CAAhC;;EACA,IAAIK,MAAM,CAACqB,qBAAX,EAAkC;IAChCzB,GAAG,CAAC0B,mBAAJ,CAAwBN,MAAxB,EAAgC,OAAhC,EAAyChB,MAAM,CAACqB,qBAAhD;EACD;;EACD,OAAOL,MAAP;AACD,CAPD"},"metadata":{},"sourceType":"module"}